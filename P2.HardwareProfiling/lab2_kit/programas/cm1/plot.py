import matplotlib.pyplot as plt

# Input data
data = {
    (1, 8192): 0.000219,
    (1, 16384): 0.000210,
    (1, 32768): 0.002096,
    (1, 65536): 0.015654,
    (2, 8192): 0.000145,
    (2, 16384): 0.000190,
    (2, 32768): 0.003133,
    (2, 65536): 0.031308,
    (4, 8192): 0.000068,
    (4, 16384): 0.000154,
    (4, 32768): 0.004988,
    (4, 65536): 0.062675,
    (8, 8192): 0.000056,
    (8, 16384): 0.000157,
    (8, 32768): 0.008643,
    (8, 65536): 0.125377,
    (16, 8192): 0.000063,
    (16, 16384): 0.000202,
    (16, 32768): 0.015839,
    (16, 65536): 0.250732,
    (32, 8192): 0.000058,
    (32, 16384): 0.000161,
    (32, 32768): 0.025551,
    (32, 65536): 0.501475,
    (64, 8192): 0.000055,
    (64, 16384): 0.000169,
    (64, 32768): 0.031311,
    (64, 65536): 1.000947,
    (128, 8192): 0.000027,
    (128, 16384): 0.000071,
    (128, 32768): 0.046938,
    (128, 65536): 1.024669,
    (256, 8192): 0.000020,
    (256, 16384): 0.000039,
    (256, 32768): 0.105735,
    (256, 65536): 1.040021,
    (512, 8192): 0.000012,
    (512, 16384): 0.000023,
    (512, 32768): 0.181915,
    (512, 65536): 1.018479,
    (1024, 8192): 0.000012,
    (1024, 16384): 0.000012,
    (1024, 32768): 0.228627,
    (1024, 65536): 0.971095,
    (2048, 8192): 0.000010,
    (2048, 16384): 0.000003,
    (2048, 32768): 0.000030,
    (2048, 65536): 1.559086,
    (4096, 8192): 0.000007,
    (4096, 16384): 0.000005,
    (4096, 32768): 0.000018,
    (4096, 65536): 1.410969,
    (8192, 8192): 0.0,
    (8192, 16384): 0.000002,
    (8192, 32768): 0.000002,
    (8192, 65536): 0.000017,
    (16384, 8192): 0.0,
    (16384, 16384): 0.0,
    (16384, 32768): 0.000003,
    (16384, 65536): 0.000002,
    (32768, 8192): 0.0,
    (32768, 16384): 0.0,
    (32768, 32768): 0.0,
    (32768, 65536): 0.000002,
}

# Extract x values (first element of tuple) and y values for each second element in tuple (8192, 16384, 32768, 65536)
x_values = sorted(set(key[0] for key in data.keys()))  # Sorted unique x values

# Organize y values by second element of the tuple
y_values = {second: [] for second in [8192, 16384, 32768, 65536]}
for x in x_values:
    for second in y_values:
        y_values[second].append(data.get((x, second), 0))

# Plotting the data
plt.figure(figsize=(10, 6))
for second in y_values:
    plt.plot(x_values, y_values[second], marker='o', label=f'Cache Size = {second}')

# Configure the plot
plt.xlabel('Stride')
plt.ylabel('Average Misses')
plt.title('Average Misses VS Stride for Cache Sizes')
plt.xscale('log', base=2)
plt.legend()
plt.grid(True)

plt.savefig('plot.png')
